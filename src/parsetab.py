
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASSIGN BACK BEGIN BLOCK CALL CHANGEDIR COMMA COMMENT END ENDPROC EOL ESPECIAL FEND FOR HIGH ID KEEP KEND LBRA LCBRA LEFT LESS LIGHT LPAR MATHEXPR NUM PLACE POS POSSTART PROC PUT QUOTE RBRA RCBRA RES RIGHT RPAR SAME SEMICOLON SET SKIP SUM THEN TIMES VAR WHEN WHEND WHITESPACEprograma : variable BEGIN expresiones END procedimientosvariable : VAR variable1variable1 : ID ASSIGN NUM SEMICOLONvariable1 : ID SEMICOLONexpresiones : asignar expresionesexpresiones : actualizar expresionesexpresiones : cambiar_direccion expresionesexpresiones : colocar expresionesexpresiones : elevar expresionesexpresiones : encender expresionesexpresiones : mover expresionesexpresiones : pos_inicio expresionesexpresiones : llamar expresionesexpresiones : c_keep expresionesexpresiones : c_for expresionesexpresiones : c_when expresiones expresiones : SKIP SEMICOLON expresionesexpresiones  : COMMENT expresionesexpresiones : epsilonc_for : FOR ID ASSIGN NUM TIMES expresiones FEND SEMICOLONc_when : WHEN ID ASSIGN NUM THEN expresiones WHEND SEMICOLONc_keep : KEEP expresiones KEND SEMICOLONasignar : SET ID ASSIGN NUM SEMICOLONactualizar : ADD SUM ID SEMICOLONactualizar : LESS SUM ID SEMICOLONcambiar_direccion : CHANGEDIR LPAR direcciondireccion : LEFT RPARdireccion : RIGHT RPARdireccion : BACK RPARdireccion : SAME RPARcolocar : PLACE BLOCK colocar1colocar1 : SEMICOLONcolocar1 : NUM SEMICOLONelevar : HIGH BLOCK elevar1elevar1 : SEMICOLONelevar1 : NUM SEMICOLONencender : PUT LIGHT SEMICOLONmover : POS LPAR NUM COMMA NUM RPAR SEMICOLONpos_inicio : POSSTART LPAR NUM COMMA NUM RPAR SEMICOLONllamar : CALL ID SEMICOLONprocedimientos : PROC ID expresiones ENDPROC SEMICOLONprocedimientos : epsilonepsilon :'
    
_lr_action_items = {'VAR':([0,],[3,]),'$end':([1,38,67,69,119,],[0,-43,-1,-42,-41,]),'BEGIN':([2,5,37,92,],[4,-2,-4,-3,]),'ID':([3,23,32,34,35,54,55,68,],[6,53,62,64,65,72,73,93,]),'SKIP':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-26,-31,-32,-34,-35,-37,-40,20,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,20,20,-38,-39,-20,-21,]),'COMMENT':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-26,-31,-32,-34,-35,-37,-40,21,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,21,21,-38,-39,-20,-21,]),'SET':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,-31,-32,-34,-35,-37,-40,23,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,23,23,-38,-39,-20,-21,]),'ADD':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,-31,-32,-34,-35,-37,-40,24,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,24,24,-38,-39,-20,-21,]),'LESS':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-26,-31,-32,-34,-35,-37,-40,25,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,25,25,-38,-39,-20,-21,]),'CHANGEDIR':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,-31,-32,-34,-35,-37,-40,26,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,26,26,-38,-39,-20,-21,]),'PLACE':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,-31,-32,-34,-35,-37,-40,27,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,27,27,-38,-39,-20,-21,]),'HIGH':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,-31,-32,-34,-35,-37,-40,28,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,28,28,-38,-39,-20,-21,]),'PUT':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,-31,-32,-34,-35,-37,-40,29,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,29,29,-38,-39,-20,-21,]),'POS':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-26,-31,-32,-34,-35,-37,-40,30,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,30,30,-38,-39,-20,-21,]),'POSSTART':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-26,-31,-32,-34,-35,-37,-40,31,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,31,31,-38,-39,-20,-21,]),'CALL':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-26,-31,-32,-34,-35,-37,-40,32,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,32,32,-38,-39,-20,-21,]),'KEEP':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-26,-31,-32,-34,-35,-37,-40,33,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,33,33,-38,-39,-20,-21,]),'FOR':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,-31,-32,-34,-35,-37,-40,34,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,34,34,-38,-39,-20,-21,]),'WHEN':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,109,112,113,120,121,124,125,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-26,-31,-32,-34,-35,-37,-40,35,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,35,35,-38,-39,-20,-21,]),'END':([4,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,39,40,41,42,43,44,45,46,47,48,49,50,51,52,70,74,79,80,82,83,85,88,95,96,97,98,99,100,101,102,105,109,120,121,124,125,],[-43,38,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-19,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-18,-17,-26,-31,-32,-34,-35,-37,-40,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,-38,-39,-20,-21,]),'ASSIGN':([6,53,64,65,],[36,71,90,91,]),'SEMICOLON':([6,20,57,58,59,62,66,72,73,81,84,89,94,114,115,116,122,123,],[37,51,80,83,85,88,92,95,96,101,102,105,109,119,120,121,124,125,]),'KEND':([8,9,10,11,12,13,14,15,16,17,18,19,21,22,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,70,74,79,80,82,83,85,88,95,96,97,98,99,100,101,102,105,109,120,121,124,125,],[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-19,-43,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-18,89,-17,-26,-31,-32,-34,-35,-37,-40,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,-38,-39,-20,-21,]),'ENDPROC':([8,9,10,11,12,13,14,15,16,17,18,19,21,22,39,40,41,42,43,44,45,46,47,48,49,50,51,52,70,74,79,80,82,83,85,88,93,95,96,97,98,99,100,101,102,105,108,109,120,121,124,125,],[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-19,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-18,-17,-26,-31,-32,-34,-35,-37,-40,-43,-24,-25,-27,-28,-29,-30,-33,-36,-22,114,-23,-38,-39,-20,-21,]),'FEND':([8,9,10,11,12,13,14,15,16,17,18,19,21,22,39,40,41,42,43,44,45,46,47,48,49,50,51,52,70,74,79,80,82,83,85,88,95,96,97,98,99,100,101,102,105,109,112,117,120,121,124,125,],[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-19,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-18,-17,-26,-31,-32,-34,-35,-37,-40,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,-43,122,-38,-39,-20,-21,]),'WHEND':([8,9,10,11,12,13,14,15,16,17,18,19,21,22,39,40,41,42,43,44,45,46,47,48,49,50,51,52,70,74,79,80,82,83,85,88,95,96,97,98,99,100,101,102,105,109,113,118,120,121,124,125,],[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-19,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-18,-17,-26,-31,-32,-34,-35,-37,-40,-24,-25,-27,-28,-29,-30,-33,-36,-22,-23,-43,123,-38,-39,-20,-21,]),'SUM':([24,25,],[54,55,]),'LPAR':([26,30,31,],[56,60,61,]),'BLOCK':([27,28,],[57,58,]),'LIGHT':([29,],[59,]),'NUM':([36,57,58,60,61,71,90,91,103,104,],[66,81,84,86,87,94,106,107,110,111,]),'PROC':([38,],[68,]),'LEFT':([56,],[75,]),'RIGHT':([56,],[76,]),'BACK':([56,],[77,]),'SAME':([56,],[78,]),'RPAR':([75,76,77,78,110,111,],[97,98,99,100,115,116,]),'COMMA':([86,87,],[103,104,]),'TIMES':([106,],[112,]),'THEN':([107,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'variable':([0,],[2,]),'variable1':([3,],[5,]),'expresiones':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[7,39,40,41,42,43,44,45,46,47,48,49,50,52,63,70,108,117,118,]),'asignar':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'actualizar':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'cambiar_direccion':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'colocar':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'elevar':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'encender':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'mover':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'pos_inicio':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'llamar':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'c_keep':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'c_for':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'c_when':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,51,93,112,113,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'epsilon':([4,8,9,10,11,12,13,14,15,16,17,18,19,21,33,38,51,93,112,113,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,69,22,22,22,22,]),'procedimientos':([38,],[67,]),'direccion':([56,],[74,]),'colocar1':([57,],[79,]),'elevar1':([58,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variable BEGIN expresiones END procedimientos','programa',5,'p_programa','AnalizadorSintactico.py',22),
  ('variable -> VAR variable1','variable',2,'p_variable','AnalizadorSintactico.py',29),
  ('variable1 -> ID ASSIGN NUM SEMICOLON','variable1',4,'p_variable1','AnalizadorSintactico.py',33),
  ('variable1 -> ID SEMICOLON','variable1',2,'p_variable1_1','AnalizadorSintactico.py',39),
  ('expresiones -> asignar expresiones','expresiones',2,'p_expresiones1','AnalizadorSintactico.py',45),
  ('expresiones -> actualizar expresiones','expresiones',2,'p_expresiones2','AnalizadorSintactico.py',49),
  ('expresiones -> cambiar_direccion expresiones','expresiones',2,'p_expresiones3','AnalizadorSintactico.py',53),
  ('expresiones -> colocar expresiones','expresiones',2,'p_expresiones4','AnalizadorSintactico.py',57),
  ('expresiones -> elevar expresiones','expresiones',2,'p_expresiones5','AnalizadorSintactico.py',61),
  ('expresiones -> encender expresiones','expresiones',2,'p_expresiones6','AnalizadorSintactico.py',65),
  ('expresiones -> mover expresiones','expresiones',2,'p_expresiones7','AnalizadorSintactico.py',69),
  ('expresiones -> pos_inicio expresiones','expresiones',2,'p_expresiones8','AnalizadorSintactico.py',73),
  ('expresiones -> llamar expresiones','expresiones',2,'p_expresiones9','AnalizadorSintactico.py',77),
  ('expresiones -> c_keep expresiones','expresiones',2,'p_expresiones10','AnalizadorSintactico.py',81),
  ('expresiones -> c_for expresiones','expresiones',2,'p_expresiones11','AnalizadorSintactico.py',85),
  ('expresiones -> c_when expresiones','expresiones',2,'p_expresiones12','AnalizadorSintactico.py',89),
  ('expresiones -> SKIP SEMICOLON expresiones','expresiones',3,'p_expresiones13','AnalizadorSintactico.py',93),
  ('expresiones -> COMMENT expresiones','expresiones',2,'p_expresiones14','AnalizadorSintactico.py',97),
  ('expresiones -> epsilon','expresiones',1,'p_expresionesEpsilon','AnalizadorSintactico.py',101),
  ('c_for -> FOR ID ASSIGN NUM TIMES expresiones FEND SEMICOLON','c_for',8,'p_cicloFor','AnalizadorSintactico.py',105),
  ('c_when -> WHEN ID ASSIGN NUM THEN expresiones WHEND SEMICOLON','c_when',8,'p_cicloWhen','AnalizadorSintactico.py',109),
  ('c_keep -> KEEP expresiones KEND SEMICOLON','c_keep',4,'p_cicloKeep','AnalizadorSintactico.py',113),
  ('asignar -> SET ID ASSIGN NUM SEMICOLON','asignar',5,'p_asignar','AnalizadorSintactico.py',117),
  ('actualizar -> ADD SUM ID SEMICOLON','actualizar',4,'p_actualizar','AnalizadorSintactico.py',123),
  ('actualizar -> LESS SUM ID SEMICOLON','actualizar',4,'p_actualizar_1','AnalizadorSintactico.py',129),
  ('cambiar_direccion -> CHANGEDIR LPAR direccion','cambiar_direccion',3,'p_cambiar_direccion','AnalizadorSintactico.py',135),
  ('direccion -> LEFT RPAR','direccion',2,'p_direccion_1','AnalizadorSintactico.py',139),
  ('direccion -> RIGHT RPAR','direccion',2,'p_direccion_2','AnalizadorSintactico.py',145),
  ('direccion -> BACK RPAR','direccion',2,'p_direccion_3','AnalizadorSintactico.py',151),
  ('direccion -> SAME RPAR','direccion',2,'p_direccion_4','AnalizadorSintactico.py',157),
  ('colocar -> PLACE BLOCK colocar1','colocar',3,'p_colocar','AnalizadorSintactico.py',162),
  ('colocar1 -> SEMICOLON','colocar1',1,'p_colocar1_1','AnalizadorSintactico.py',166),
  ('colocar1 -> NUM SEMICOLON','colocar1',2,'p_colocar1_2','AnalizadorSintactico.py',173),
  ('elevar -> HIGH BLOCK elevar1','elevar',3,'p_elevar','AnalizadorSintactico.py',189),
  ('elevar1 -> SEMICOLON','elevar1',1,'p_elevar1_1','AnalizadorSintactico.py',193),
  ('elevar1 -> NUM SEMICOLON','elevar1',2,'p_elevarr1_2','AnalizadorSintactico.py',200),
  ('encender -> PUT LIGHT SEMICOLON','encender',3,'p_encender','AnalizadorSintactico.py',207),
  ('mover -> POS LPAR NUM COMMA NUM RPAR SEMICOLON','mover',7,'p_mover','AnalizadorSintactico.py',214),
  ('pos_inicio -> POSSTART LPAR NUM COMMA NUM RPAR SEMICOLON','pos_inicio',7,'p_pos_inicio','AnalizadorSintactico.py',220),
  ('llamar -> CALL ID SEMICOLON','llamar',3,'p_llamar','AnalizadorSintactico.py',227),
  ('procedimientos -> PROC ID expresiones ENDPROC SEMICOLON','procedimientos',5,'p_procedimientos_1','AnalizadorSintactico.py',231),
  ('procedimientos -> epsilon','procedimientos',1,'p_procedimientos_2','AnalizadorSintactico.py',235),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','AnalizadorSintactico.py',239),
]
